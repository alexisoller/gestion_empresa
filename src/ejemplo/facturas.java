/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ejemplo;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alexis
 */
public class facturas extends javax.swing.JFrame {

    boolean nuevoRegistro = false;
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    ResultSet rscargarlineas = null;
    long total = 1;
    inicio pantallainicial = null;
    Calendar c = GregorianCalendar.getInstance();
    ResultSet combos = null;
    PreparedStatement pstmtcargarlineas = null;
    PreparedStatement pstmtborrarfactura = null;
    PreparedStatement pstmtborrarlinea = null;
    Statement stmtborrar = null;

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    lineas_dialog li = null;
    long ultimalinea = 0;
    DefaultTableModel m = null;

    public facturas(Connection c, inicio padre) {
        this.conn = c;
        this.pantallainicial = padre;
        initComponents();
        redimensionar();
        crearConexion();

        tfid.setEnabled(false);
        dccfecha.setEnabled(false);
        cbcliente.setEnabled(false);
        cbvendedor.setEnabled(false);
        cbformapago.setEnabled(false);
        lbfilaseleccionada.setText("Para borrar o editar una linea haz click sobre cualquier campo de la tabla");
        jbborrarselecciontabla.setEnabled(false);
        jbeditarlinea.setEnabled(false);
        jbborrarlinea.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbtitulo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jpanelprincipal = new javax.swing.JPanel();
        jlidentificador = new javax.swing.JLabel();
        tfid = new javax.swing.JTextField();
        lbfecha = new javax.swing.JLabel();
        lbcliente = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        lbvendedor = new javax.swing.JLabel();
        cbformapago = new javax.swing.JComboBox();
        lbformapago = new javax.swing.JLabel();
        cbcliente = new javax.swing.JComboBox();
        cbvendedor = new javax.swing.JComboBox();
        dccfecha = new datechooser.beans.DateChooserCombo();
        jPanel2 = new javax.swing.JPanel();
        btnPrime = new javax.swing.JButton();
        btnAnt = new javax.swing.JButton();
        btnUltim = new javax.swing.JButton();
        btnSig = new javax.swing.JButton();
        lblTot = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblReg = new javax.swing.JLabel();
        lbrgactual = new javax.swing.JLabel();
        lbtotal = new javax.swing.JLabel();
        jbanadirlinea = new javax.swing.JButton();
        jbeditarlinea = new javax.swing.JButton();
        jbborrarlinea = new javax.swing.JButton();
        jbborrarselecciontabla = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtlineas = new javax.swing.JTable();
        lbfilaseleccionada = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        lbtitulo.setBackground(new java.awt.Color(204, 204, 255));
        lbtitulo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbtitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbtitulo.setText("MANTENIMIENTO FACTURAS");
        lbtitulo.setOpaque(true);

        jlidentificador.setText("Identificador");

        lbfecha.setText("Fecha");

        lbcliente.setText("Cliente");

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnEdit.setText("Editar");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        lbvendedor.setText("Vendedor");

        cbformapago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Contado", "tarjeta", "transferencia" }));

        lbformapago.setText("Forma de pago");

        dccfecha.setCalendarPreferredSize(new java.awt.Dimension(400, 180));

        javax.swing.GroupLayout jpanelprincipalLayout = new javax.swing.GroupLayout(jpanelprincipal);
        jpanelprincipal.setLayout(jpanelprincipalLayout);
        jpanelprincipalLayout.setHorizontalGroup(
            jpanelprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelprincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpanelprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbfecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlidentificador, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbcliente)
                    .addComponent(lbvendedor)
                    .addComponent(lbformapago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpanelprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfid)
                    .addComponent(dccfecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbcliente, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbformapago, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbvendedor, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpanelprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jpanelprincipalLayout.setVerticalGroup(
            jpanelprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelprincipalLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jpanelprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelprincipalLayout.createSequentialGroup()
                        .addComponent(btnNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit))
                    .addGroup(jpanelprincipalLayout.createSequentialGroup()
                        .addGroup(jpanelprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlidentificador)
                            .addComponent(tfid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpanelprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dccfecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpanelprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbcliente)
                            .addComponent(cbcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(13, 13, 13)
                .addGroup(jpanelprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbvendedor)
                    .addComponent(cbvendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jpanelprincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbformapago)
                    .addComponent(cbformapago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        btnPrime.setText("|<");
        btnPrime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeActionPerformed(evt);
            }
        });

        btnAnt.setText("<<");
        btnAnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAntActionPerformed(evt);
            }
        });

        btnUltim.setText(">|");
        btnUltim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimActionPerformed(evt);
            }
        });

        btnSig.setText(">>");
        btnSig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSigActionPerformed(evt);
            }
        });

        lblTot.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTot.setText("Tot. registros");
        lblTot.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnOk.setText("ACEPTAR");
        btnOk.setEnabled(false);
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancelar");
        btnCancel.setEnabled(false);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        lblReg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblReg.setText("Reg. actual");
        lblReg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lbrgactual.setText("jLabel2");

        lbtotal.setText("jLabel2");

        jbanadirlinea.setText("A�adir Linea");
        jbanadirlinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbanadirlineaActionPerformed(evt);
            }
        });

        jbeditarlinea.setText("Editar Linea");
        jbeditarlinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbeditarlineaActionPerformed(evt);
            }
        });

        jbborrarlinea.setText("Borrar Linea");
        jbborrarlinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbborrarlineaActionPerformed(evt);
            }
        });

        jbborrarselecciontabla.setText("Borrar Seleccion");
        jbborrarselecciontabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbborrarselecciontablaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnPrime, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAnt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblTot, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(lblReg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbrgactual)
                            .addComponent(lbtotal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnSig, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUltim, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jbanadirlinea)
                        .addGap(18, 18, 18)
                        .addComponent(jbeditarlinea)
                        .addGap(18, 18, 18)
                        .addComponent(jbborrarlinea)
                        .addGap(18, 18, 18)
                        .addComponent(jbborrarselecciontabla)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrime)
                    .addComponent(btnAnt)
                    .addComponent(btnUltim)
                    .addComponent(btnSig)
                    .addComponent(lblReg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbrgactual))
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancel)
                    .addComponent(lblTot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbtotal))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbanadirlinea)
                    .addComponent(jbeditarlinea)
                    .addComponent(jbborrarlinea)
                    .addComponent(jbborrarselecciontabla)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpanelprincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpanelprincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jtlineas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtlineas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtlineasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtlineas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(lbtitulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbfilaseleccionada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lbtitulo)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(lbfilaseleccionada)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPrimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeActionPerformed
        try {
            rs.first();
            mostrarDatos(rs);
            lbrgactual.setText(String.valueOf(rs.getRow()));
        } catch (SQLException e) {
            mostrarError(e.getMessage());
        }
    }//GEN-LAST:event_btnPrimeActionPerformed

    private void btnAntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAntActionPerformed
        try {
            rs.previous();
            mostrarDatos(rs);
            lbrgactual.setText(String.valueOf(rs.getRow()));
        } catch (SQLException e) {
            mostrarError(e.getMessage());
        }
    }//GEN-LAST:event_btnAntActionPerformed

    private void btnUltimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimActionPerformed
        try {
            rs.last();
            System.out.println("hola" + rs.isAfterLast());
            mostrarDatos(rs);
            lbrgactual.setText(String.valueOf(rs.getRow()));
        } catch (SQLException e) {
            mostrarError(e.getMessage());
        }
    }//GEN-LAST:event_btnUltimActionPerformed

    private void btnSigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSigActionPerformed
        try {
            rs.next();
            System.out.println("hola" + rs.isAfterLast());
            mostrarDatos(rs);

            lbrgactual.setText(String.valueOf(rs.getRow()));
        } catch (SQLException e) {
            mostrarError(e.getMessage());
        }
    }//GEN-LAST:event_btnSigActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        try {
            jtlineas.setVisible(true);
            jbanadirlinea.setEnabled(true);
            rs.updateString(2, formatearfecha());

            rs.updateString(3, retornaridcb(1));

            rs.updateString(4, retornaridcb(2));

            rs.updateString(5, retornaridcb(3));

            if (nuevoRegistro) {
                // La accion viene por nuevo registro: insertamos_la_fila;

                rs.insertRow();

                // nos_movemos_al_ultimo_Registro;
                rs.last();

                total = rs.getRow();
                lbtotal.setText(String.valueOf(total));
                cbcliente.setEnabled(false);
                cbvendedor.setEnabled(false);
                cbformapago.setEnabled(false);
                dccfecha.setEnabled(false);
                btnBorrar.setEnabled(true);
                btnEdit.setEnabled(true);
                lbrgactual.setText(String.valueOf(rs.getRow()));

            } else {
                //La accion viene por modificacion : actualizamos_el_registro;
                rs.updateRow();
                btnNuevo.setEnabled(true);
                btnBorrar.setEnabled(true);
            }
            nuevoRegistro = false;
            botoneraAccionActivada(false);
            botoneraNavegacionActivada(true);
            botoneraEdicionActivada(true);
            cbcliente.setEnabled(false);
            cbvendedor.setEnabled(false);
            cbformapago.setEnabled(false);
            dccfecha.setEnabled(false);

            mostrarDatos(rs);

        } catch (SQLException e) {
            mostrarError(e.getMessage());
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        try {
            jtlineas.setVisible(true);
            jbanadirlinea.setEnabled(true);
            rs.cancelRowUpdates(); //  cancelamos_las_modificaciones;

            dccfecha.setEnabled(false);
            cbcliente.setEnabled(false);
            cbvendedor.setEnabled(false);
            cbformapago.setEnabled(false);

            //poner el de fecha a un valor cuando cancelamos el update que sera el del registro 1 
            cbcliente.setSelectedIndex(0);
            cbvendedor.setSelectedIndex(0);
            cbformapago.setSelectedIndex(0);

            nuevoRegistro = false;
            lbrgactual.setText(String.valueOf(rs.getRow()));

            botoneraAccionActivada(false);
            botoneraNavegacionActivada(true);
            botoneraEdicionActivada(true);
            rs.first();
            lbrgactual.setText("1");
            mostrarDatos(rs);

        } catch (SQLException e) {
            mostrarError(e.getMessage());
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        nuevoRegistro = true;
        try {
            jtlineas.setVisible(false);
            rs.last();
            long id;
            id = Integer.valueOf(rs.getString("id"));
            tfid.setText(String.valueOf(id + 1));
            rs.moveToInsertRow();

            // falta poner el de fecha
            cbcliente.setSelectedIndex(0);
            cbvendedor.setSelectedIndex(0);
            cbformapago.setSelectedIndex(0);

            cbformapago.setSelectedIndex(0);

            botoneraEdicionActivada(false);
            botoneraNavegacionActivada(false);
            dccfecha.setEnabled(true);
            cbcliente.setEnabled(true);
            cbvendedor.setEnabled(true);
            cbformapago.setEnabled(true);
            jbanadirlinea.setEnabled(false);
            botoneraAccionActivada(true);

            for (int i = 0; i < jtlineas.getRowCount(); i++) {
                m.removeRow(i);
                i -= 1;
            }

        } catch (SQLException e) {
            mostrarError(e.getMessage());
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        try {
            if (hayRegistros()) {
                String[] buttons = {"Si", "No"};

                int rc = JOptionPane.showOptionDialog(null, "Realmente desea borrar el registro con ID = [" + rs.getLong(1) + "]?",
                        "Confirmation", JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[1]);

                if (rc == 0) {

                    int linea = rs.getRow();

                    conn.setAutoCommit(false);

                    System.out.println("reg actual a borrar" + rs.getRow());

                    stmtborrar = conn.createStatement();
                    stmtborrar.execute("delete from lineas_factura where factura=" + tfid.getText());

                    stmtborrar = conn.createStatement();
                    stmtborrar.execute("delete from facturas where id=" + tfid.getText());

                    conn.commit();
                    conn.setAutoCommit(true);

                    String sql = "select * from facturas";
                    rs = stmt.executeQuery(sql);
                    if (linea - 1 == 0) {
                        rs.first();
                    } else {
                        rs.absolute(linea - 1);
                    }

                    System.out.println("hola " + rs.isBeforeFirst());
                    System.out.println("adios " + rs.isAfterLast());

                    lbrgactual.setText(String.valueOf(rs.getRow()));
                    total = total - 1;
                    lbtotal.setText(String.valueOf(total));
                    jbanadirlinea.setEnabled(false);
                    mostrarDatos(rs);
                }
            }
        } catch (SQLException e) {
            mostrarError(e.getMessage());
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        jtlineas.setVisible(false);
        try {
            if (hayRegistros()) {
                nuevoRegistro = false;
                botoneraEdicionActivada(false);
                botoneraNavegacionActivada(false);

                dccfecha.setEnabled(true);
                cbcliente.setEnabled(true);
                cbvendedor.setEnabled(true);
                cbformapago.setEnabled(true);
                jbanadirlinea.setEnabled(false);
                cbformapago.setEnabled(true);
                botoneraAccionActivada(true);
            }
        } catch (SQLException ex) {
            mostrarError(ex.getMessage());
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void jbanadirlineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbanadirlineaActionPerformed

        try {
            li = new lineas_dialog(this, true, conn);

            li.ponerdatoanadir(ultimalinea + 1, tfid.getText());
            li.setVisible(true);
            cargarlineas();
        } catch (SQLException ex) {
            Logger.getLogger(facturas.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jbanadirlineaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            rs.close();
            stmt.close();
            this.setVisible(false);
            pantallainicial.setVisible(true);
        } catch (SQLException e) {
            mostrarError(e.getMessage());
        }
    }//GEN-LAST:event_formWindowClosing

    private void jtlineasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtlineasMouseClicked
        jbeditarlinea.setEnabled(true);
        jbborrarlinea.setEnabled(true);
        jbanadirlinea.setEnabled(false);
        botoneraNavegacionActivada(false);
        botoneraEdicionActivada(false);
        jbborrarselecciontabla.setEnabled(true);

        lbfilaseleccionada.setText("Linea a modificar o borrar  " + String.valueOf(jtlineas.getValueAt(jtlineas.getSelectedRow(), 0)));

    }//GEN-LAST:event_jtlineasMouseClicked

    private void jbeditarlineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbeditarlineaActionPerformed
        try {
            li = new lineas_dialog(this, true, conn);

            li.ponerdatoseditar(String.valueOf(jtlineas.getValueAt(jtlineas.getSelectedRow(), 0)),
                    String.valueOf(jtlineas.getValueAt(jtlineas.getSelectedRow(), 1)),
                    String.valueOf(jtlineas.getValueAt(jtlineas.getSelectedRow(), 2)),
                    String.valueOf(jtlineas.getValueAt(jtlineas.getSelectedRow(), 3)),
                    String.valueOf(jtlineas.getValueAt(jtlineas.getSelectedRow(), 4)));
            li.setVisible(true);
            jbeditarlinea.setEnabled(false);
            jbborrarlinea.setEnabled(false);
            botoneraEdicionActivada(true);
            jbanadirlinea.setEnabled(true);
            btnPrime.setEnabled(!rs.isFirst());
            btnAnt.setEnabled(!rs.isFirst());
            btnUltim.setEnabled(!rs.isLast());
            btnSig.setEnabled(!rs.isLast());
            jbborrarselecciontabla.setEnabled(false);
            jtlineas.clearSelection();
            lbfilaseleccionada.setText("Para borrar o editar una linea haz click sobre cualquier campo de la tabla");
            cargarlineas();

            //cargar otra vez las lineas
        } catch (SQLException ex) {
            Logger.getLogger(facturas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbeditarlineaActionPerformed

    private void jbborrarlineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbborrarlineaActionPerformed
        try {
            pstmtborrarlinea.setString(1, tfid.getText());

            pstmtborrarlinea.setString(2, String.valueOf(jtlineas.getValueAt(jtlineas.getSelectedRow(), 0)));

            pstmtborrarlinea.executeUpdate();

            jbborrarlinea.setEnabled(false);
            jbeditarlinea.setEnabled(false);
            jbanadirlinea.setEnabled(true);
            btnPrime.setEnabled(!rs.isFirst());
            btnAnt.setEnabled(!rs.isFirst());
            btnUltim.setEnabled(!rs.isLast());
            btnSig.setEnabled(!rs.isLast());
            botoneraEdicionActivada(true);
            jbborrarselecciontabla.setEnabled(false);
            jtlineas.clearSelection();
            lbfilaseleccionada.setText("Para borrar o editar una linea haz click sobre cualquier campo de la tabla");
            cargarlineas();
            JOptionPane.showMessageDialog(this, "REGISTRO BORRADO CORRECTAMENTE");

        } catch (SQLException ex) {
            Logger.getLogger(facturas.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jbborrarlineaActionPerformed

    private void jbborrarselecciontablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbborrarselecciontablaActionPerformed

        try {
            jbeditarlinea.setEnabled(false);
            jbborrarlinea.setEnabled(false);
            jbanadirlinea.setEnabled(true);
            btnPrime.setEnabled(!rs.isFirst());
            btnAnt.setEnabled(!rs.isFirst());
            btnUltim.setEnabled(!rs.isLast());
            btnSig.setEnabled(!rs.isLast());
            botoneraEdicionActivada(true);
            jbborrarselecciontabla.setEnabled(false);
            jtlineas.clearSelection();
            lbfilaseleccionada.setText("Para borrar o editar una linea haz click sobre cualquier campo de la tabla");
        } catch (SQLException ex) {
            Logger.getLogger(facturas.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jbborrarselecciontablaActionPerformed

    /**
     * @param args the command line arguments
     */
    private void crearConexion() {
        try {
            pstmtcargarlineas = conn.prepareStatement("select * from lineas_factura where factura=?");

            pstmtborrarlinea = conn.prepareStatement("delete from lineas_factura where factura=? and linea=?");

            stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            cargarcombos();
            String sql = "select * from facturas";
            rs = stmt.executeQuery(sql);

            if (rs.first()) {
                mostrarDatos(rs);
            }
            rs.last();
            total = rs.getRow();
            lbtotal.setText(String.valueOf(total));
            rs.first();
            lbrgactual.setText(String.valueOf(rs.getRow()));

        } catch (SQLException sqle) {
            mostrarError(sqle.getMessage());
        }
    }

    private void mostrarDatos(ResultSet rs) throws SQLException {
        System.out.println("Mostrando..." + rs.getRow());
        if (rs.getRow() > 0) {
            tfid.setText(rs.getLong(1) + "");

            cargarfecha();

            cargartextocombos();

            cargarlineas();

        } else {
            tfid.setText("");

            cbcliente.setSelectedItem(0);
            cbvendedor.setSelectedItem(0);
            cbformapago.setSelectedItem(0);
        }
        btnPrime.setEnabled(!rs.isFirst());
        btnAnt.setEnabled(!rs.isFirst());
        btnUltim.setEnabled(!rs.isLast());
        btnSig.setEnabled(!rs.isLast());

    }

    private void redimensionar() {

        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        int ancho = 2 * d.width / 3;
        int alto = d.height / 2;
        this.setLocationRelativeTo(this);
        d = Toolkit.getDefaultToolkit().getScreenSize();
        ancho = 2 * d.width / 6;
        alto = d.height / 4;
        this.setMaximumSize(new Dimension(ancho, alto));
        this.setMinimumSize(new Dimension(ancho, alto));
        this.pack();

    }

    private void mostrarError(String msg) {
        System.out.println(msg);
        JOptionPane.showMessageDialog(this, msg, "Error", JOptionPane.ERROR_MESSAGE);
    }

    private void botoneraAccionActivada(boolean estado) {
        btnOk.setEnabled(estado);
        btnCancel.setEnabled(estado);
    }

    private void botoneraNavegacionActivada(boolean estado) {
        btnPrime.setEnabled(estado);
        btnAnt.setEnabled(estado);
        btnSig.setEnabled(estado);
        btnUltim.setEnabled(estado);
    }

    private void botoneraEdicionActivada(boolean estado) {
        btnNuevo.setEnabled(estado);
        btnBorrar.setEnabled(estado);
        btnEdit.setEnabled(estado);
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.

    }

    private boolean hayRegistros() throws SQLException {
        int r = rs.getRow();
        if (!rs.first()) {
            System.out.println("Resultset vacio");
            return false;
        } else {
            System.out.println("Resultset con datos");
            rs.absolute(r);
            return true;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnt;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnPrime;
    private javax.swing.JButton btnSig;
    private javax.swing.JButton btnUltim;
    private javax.swing.JComboBox cbcliente;
    private javax.swing.JComboBox cbformapago;
    private javax.swing.JComboBox cbvendedor;
    private datechooser.beans.DateChooserCombo dccfecha;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbanadirlinea;
    private javax.swing.JButton jbborrarlinea;
    private javax.swing.JButton jbborrarselecciontabla;
    private javax.swing.JButton jbeditarlinea;
    private javax.swing.JLabel jlidentificador;
    private javax.swing.JPanel jpanelprincipal;
    private javax.swing.JTable jtlineas;
    private javax.swing.JLabel lbcliente;
    private javax.swing.JLabel lbfecha;
    private javax.swing.JLabel lbfilaseleccionada;
    private javax.swing.JLabel lbformapago;
    private javax.swing.JLabel lblReg;
    private javax.swing.JLabel lblTot;
    private javax.swing.JLabel lbrgactual;
    private javax.swing.JLabel lbtitulo;
    private javax.swing.JLabel lbtotal;
    private javax.swing.JLabel lbvendedor;
    private javax.swing.JTextField tfid;
    // End of variables declaration//GEN-END:variables

    private String retornaridcb(int combo) {
        String[] iddesc = null;
        switch (combo) {
            case 1:
                iddesc = String.valueOf(cbcliente.getSelectedItem()).split("-");
                break;
            case 2:
                iddesc = String.valueOf(cbvendedor.getSelectedItem()).split("-");
                break;
            case 3:
                iddesc = String.valueOf(cbformapago.getSelectedItem()).split("-");
                break;
        }

        for (int i = 0; i < iddesc.length; i++) {
            System.out.println("array " + iddesc[i]);
        }
        return iddesc[0];

    }

    private void cargarcombos() throws SQLException {

        String sql = "select id,nombre from clientes";
        rs = stmt.executeQuery(sql);
        while (rs.next()) {
            String gr = rs.getLong(1) + "-" + rs.getString(2);
            cbcliente.addItem(gr);
        }
        sql = "select id,nombre from vendedores";
        rs = stmt.executeQuery(sql);
        while (rs.next()) {
            String gr = rs.getLong(1) + "-" + rs.getString(2);
            cbvendedor.addItem(gr);
        }

    }

    private void cargartextocombos() throws SQLException {
        for (int i = 0; i < cbcliente.getItemCount(); i++) {
            cbcliente.setSelectedIndex(i);
            String palabra = String.valueOf(cbcliente.getSelectedItem());
            String[] iddesc = palabra.split("-");
            if (iddesc[0].equals(String.valueOf(rs.getInt(3)))) {
                cbcliente.setSelectedItem(i);
                break;
            }
        }

        for (int i = 0; i < cbvendedor.getItemCount(); i++) {
            cbvendedor.setSelectedIndex(i);
            String palabra = String.valueOf(cbvendedor.getSelectedItem());
            String[] iddesc = palabra.split("-");
            if (iddesc[0].equals(String.valueOf(rs.getInt(4)))) {
                cbvendedor.setSelectedItem(i);
                break;
            }
        }

        for (int i = 0; i < cbformapago.getItemCount(); i++) {
            cbformapago.setSelectedIndex(i);
            String palabra = String.valueOf(cbformapago.getSelectedItem());
            String[] iddesc = palabra.split("-");
            if (iddesc[0].equals(String.valueOf(rs.getString(5)))) {
                cbformapago.setSelectedItem(i);
                break;
            }
        }

    }

    private void cargarfecha() throws SQLException {
        dccfecha.setEnabled(true);
        String f = rs.getString(2);
        Date fecha = null;
        try {
            fecha = sdf.parse(f);
            c.setTime(fecha);
            dccfecha.setSelectedDate(c);
            dccfecha.setEnabled(false);
        } catch (ParseException ex) {
            System.out.println("Formato erroneo de fecha");
        }

    }

    private void cargarlineas() throws SQLException {
        pstmtcargarlineas.setString(1, tfid.getText());
        rscargarlineas = pstmtcargarlineas.executeQuery();
        String titulos[] = {"linea", "factura", "articulo", "cantidad", "importe"};
        m = new DefaultTableModel(null, titulos);
        String[] lineas = new String[5];
        while (rscargarlineas.next()) {
            lineas[0] = rscargarlineas.getString(1);
            ultimalinea = Integer.parseInt(lineas[0]);
            lineas[1] = rscargarlineas.getString(2);
            lineas[2] = String.valueOf(rscargarlineas.getString(3));
            lineas[3] = rscargarlineas.getString(4);
            lineas[4] = String.valueOf(rscargarlineas.getString(5));

            m.addRow(lineas);
        }
        jtlineas.setModel(m);
    }

    private String formatearfecha() {
        Date f = dccfecha.getCurrent().getTime();
        return sdf.format(f);
    }
}
